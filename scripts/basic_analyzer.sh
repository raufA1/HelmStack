#!/usr/bin/env bash
set -euo pipefail

# HelmStack Community Edition - Basic Document Analyzer
# Simple document processing without AI features

INCOMING_DIR="$1"
PLANS_DIR="$2"

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
NC='\033[0m'

echo -e "${CYAN}🔍 HelmStack Community - Basic Analysis${NC}"

# Create plans directory
mkdir -p "$PLANS_DIR"

# Initialize basic STATUS.md
cat > "$PLANS_DIR/STATUS.md" << 'EOF'
# Project Status

*Generated by HelmStack Community Edition*

## Current Status

Project initialized and ready for document-first workflow.

## Documents Found

EOF

# List documents in incoming
if [ -d "$INCOMING_DIR" ] && [ "$(ls -A "$INCOMING_DIR" 2>/dev/null)" ]; then
    echo "### Incoming Documents" >> "$PLANS_DIR/STATUS.md"
    echo "" >> "$PLANS_DIR/STATUS.md"
    for doc in "$INCOMING_DIR"/*; do
        if [ -f "$doc" ]; then
            basename_doc=$(basename "$doc")
            echo "- 📄 $basename_doc" >> "$PLANS_DIR/STATUS.md"
        fi
    done
    echo "" >> "$PLANS_DIR/STATUS.md"
else
    echo "No documents found in incoming directory." >> "$PLANS_DIR/STATUS.md"
    echo "" >> "$PLANS_DIR/STATUS.md"
fi

# Basic next steps
cat >> "$PLANS_DIR/STATUS.md" << 'EOF'

## Quick Start

1. Add documents to `workspace/incoming/`
2. Run `hs work` to create focus list
3. Use `hs template TYPE=todo FILE=tasks.md` for task templates
4. Run `hs done` when session complete

## HelmStack Pro Features

For advanced capabilities, consider upgrading to HelmStack Pro:

- 🤖 **AI Document Analysis**: Automatic epic/milestone extraction
- 📊 **Advanced Analytics**: Productivity insights and trends
- 🔎 **Research Automation**: Human-in-the-loop research workflows
- 🧠 **Smart Memory**: Context-aware project management

Learn more: https://helmstack.dev/pro

---

*Generated on: $(date)*
*HelmStack Community Edition v2.1.0*
EOF

# Create basic NEXT_STEPS.md
cat > "$PLANS_DIR/NEXT_STEPS.md" << 'EOF'
# Next Steps

*Generated by HelmStack Community Edition*

## Immediate Actions

- [ ] Add project documents to `workspace/incoming/`
- [ ] Review and organize existing materials
- [ ] Set up basic project structure
- [ ] Define project goals and scope

## Workflow Setup

- [ ] Configure git repository (`git init` if needed)
- [ ] Set up GitHub repository (`hs repo NAME="..." DESC="..."`)
- [ ] Install pre-commit hooks (`pre-commit install`)
- [ ] Create project README and documentation

## Template Usage

- [ ] Create issue templates (`hs template TYPE=issue FILE=issue.md`)
- [ ] Set up ADR system (`hs adr-new TITLE="..."`)
- [ ] Document architecture decisions
- [ ] Establish coding standards

## Daily Workflow

1. **Morning**: `hs fix` to refresh plans
2. **Focus**: `hs work` to create daily focus list
3. **Evening**: `hs done` to complete session
4. **Review**: Check `hs status` regularly

---

*💡 Tip: For AI-powered analysis and advanced features, upgrade to HelmStack Pro!*

*Generated on: $(date)*
EOF

echo -e "${GREEN}✅${NC} Basic analysis complete"
echo -e "${YELLOW}💡${NC} For AI-powered analysis, upgrade to HelmStack Pro"
echo -e "   Generated: STATUS.md, NEXT_STEPS.md"