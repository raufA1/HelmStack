#!/usr/bin/env bash
set -euo pipefail

PLANS_DIR="${1:-workspace/plans}"
MEM_DIR="${2:-memory}"
RESEARCH_DIR="${3:-workspace/research}"

# Ensure directories exist
mkdir -p "$MEM_DIR" "$PLANS_DIR" "$RESEARCH_DIR"

# Get project info
PROJECT_NAME=$(basename "$(pwd)")
TIMESTAMP=$(date '+%Y-%m-%d %H:%M')

# Collect all relevant files
STATUS_FILE="$PLANS_DIR/STATUS.md"
NEXT_FILE="$PLANS_DIR/NEXT_STEPS.md"
FOCUS_FILE="$PLANS_DIR/FOCUS_LIST.md"
EPICS_FILE="$PLANS_DIR/EPICS.md"
RISKS_FILE="$PLANS_DIR/RISKS.md"

# Memory output file
MEMORY_FILE="$MEM_DIR/MEMORY.md"

# Start building memory
cat > "$MEMORY_FILE" << EOF
# 🧠 HelmStack AI Memory

**Project:** $PROJECT_NAME
**Last Updated:** $TIMESTAMP
**Generated by:** HelmStack Memory Layer

## 📋 Current Status

EOF

# Add status if exists
if [ -f "$STATUS_FILE" ]; then
    echo "### Project Status" >> "$MEMORY_FILE"
    sed 's/^/  /' "$STATUS_FILE" >> "$MEMORY_FILE"
    echo "" >> "$MEMORY_FILE"
fi

# Add next steps (top 10)
if [ -f "$NEXT_FILE" ]; then
    echo "### 🎯 Next Steps (Top 10)" >> "$MEMORY_FILE"
    grep '^- \[ \]' "$NEXT_FILE" | head -n10 | sed 's/^/  /' >> "$MEMORY_FILE" 2>/dev/null || echo "  (no pending tasks)" >> "$MEMORY_FILE"
    echo "" >> "$MEMORY_FILE"
fi

# Add focus list
if [ -f "$FOCUS_FILE" ]; then
    echo "### 🔥 Current Focus" >> "$MEMORY_FILE"
    sed 's/^/  /' "$FOCUS_FILE" >> "$MEMORY_FILE"
    echo "" >> "$MEMORY_FILE"
fi

# Add epics
if [ -f "$EPICS_FILE" ]; then
    echo "### 📚 Project Epics" >> "$MEMORY_FILE"
    sed 's/^/  /' "$EPICS_FILE" >> "$MEMORY_FILE"
    echo "" >> "$MEMORY_FILE"
fi

# Add risks
if [ -f "$RISKS_FILE" ]; then
    echo "### ⚠️ Risks & Blockers" >> "$MEMORY_FILE"
    sed 's/^/  /' "$RISKS_FILE" >> "$MEMORY_FILE"
    echo "" >> "$MEMORY_FILE"
fi

# Add research findings
echo "### 🔍 Research Findings" >> "$MEMORY_FILE"
if [ -d "$RESEARCH_DIR" ] && [ "$(ls -A "$RESEARCH_DIR")" ]; then
    echo "  **Active Research Topics:**" >> "$MEMORY_FILE"
    for research_file in "$RESEARCH_DIR"/*.md; do
        [ -f "$research_file" ] || continue
        topic=$(basename "$research_file" .md)
        echo "  - $topic" >> "$MEMORY_FILE"
    done
else
    echo "  (no active research)" >> "$MEMORY_FILE"
fi
echo "" >> "$MEMORY_FILE"

# Add recent decisions (from ADR system if available)
echo "### 🏗️ Architecture Decisions" >> "$MEMORY_FILE"
if [ -d "$MEM_DIR/decisions" ] && [ "$(ls -A "$MEM_DIR/decisions")" ]; then
    echo "  **Recent ADRs:**" >> "$MEMORY_FILE"
    ls "$MEM_DIR/decisions"/ADR-*.md 2>/dev/null | tail -5 | while read -r adr_file; do
        [ -f "$adr_file" ] || continue
        adr_title=$(grep "^# ADR-" "$adr_file" | head -1 | cut -d' ' -f2- || echo "Unknown")
        echo "  - $(basename "$adr_file" .md): $adr_title" >> "$MEMORY_FILE"
    done
else
    echo "  (no architecture decisions yet)" >> "$MEMORY_FILE"
fi
echo "" >> "$MEMORY_FILE"

# Add workspace summary
echo "### 📁 Workspace Summary" >> "$MEMORY_FILE"
echo "  **Structure:**" >> "$MEMORY_FILE"
echo "  - Plans: $PLANS_DIR" >> "$MEMORY_FILE"
echo "  - Research: $RESEARCH_DIR" >> "$MEMORY_FILE"
echo "  - Memory: $MEM_DIR" >> "$MEMORY_FILE"
echo "" >> "$MEMORY_FILE"

echo "  **File Counts:**" >> "$MEMORY_FILE"
INCOMING_COUNT=$(find workspace/incoming -name "*.md" 2>/dev/null | wc -l || echo "0")
PLANS_COUNT=$(find "$PLANS_DIR" -name "*.md" 2>/dev/null | wc -l || echo "0")
RESEARCH_COUNT=$(find "$RESEARCH_DIR" -name "*.md" 2>/dev/null | wc -l || echo "0")
SNAPSHOT_COUNT=$(find snapshots -name "snap-*.txt" 2>/dev/null | wc -l || echo "0")

echo "  - Incoming docs: $INCOMING_COUNT" >> "$MEMORY_FILE"
echo "  - Generated plans: $PLANS_COUNT" >> "$MEMORY_FILE"
echo "  - Research items: $RESEARCH_COUNT" >> "$MEMORY_FILE"
echo "  - Session snapshots: $SNAPSHOT_COUNT" >> "$MEMORY_FILE"
echo "" >> "$MEMORY_FILE"

# Add session context
echo "### 🕐 Session Context" >> "$MEMORY_FILE"
echo "  **Last Activity:**" >> "$MEMORY_FILE"

# Get recent git commits if available
if [ -d .git ]; then
    echo "  - Recent commits:" >> "$MEMORY_FILE"
    git log --oneline -5 2>/dev/null | sed 's/^/    /' >> "$MEMORY_FILE" || echo "    (no commits yet)" >> "$MEMORY_FILE"
else
    echo "    (not a git repository)" >> "$MEMORY_FILE"
fi

echo "" >> "$MEMORY_FILE"
echo "---" >> "$MEMORY_FILE"
echo "*Memory automatically generated by HelmStack AI system*" >> "$MEMORY_FILE"

# Also create a simple context file for quick reference
CONTEXT_FILE="$MEM_DIR/CONTEXT.md"
cat > "$CONTEXT_FILE" << EOF
# Quick Context

**Project:** $PROJECT_NAME
**Updated:** $TIMESTAMP

## Immediate Next Steps
$(if [ -f "$FOCUS_FILE" ]; then head -10 "$FOCUS_FILE"; else echo "Run \`make fix\` to generate focus list"; fi)

## Key Files
- Plans: $PLANS_DIR/
- Research: $RESEARCH_DIR/
- Memory: $MEM_DIR/MEMORY.md
EOF

echo "🧠 Memory layer refreshed:"
echo "   → $MEMORY_FILE"
echo "   → $CONTEXT_FILE"
